{"version":3,"file":"static/js/42.0c33aa9c.chunk.js","mappings":"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","sources":["api/movies.js","components/ErrorBackEnd/ErrorBackEnd.module.css","components/ErrorBackEnd/ErrorBackEnd.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API = 'api_key=7d82ceb0ab1c027a8051fbbd2993d1d0';\n\nexport const getMovies = async props => {\n  const { data } = await axios(`${props}?${API}`);\n  return data;\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios(`search/movie?query=${query}&${API}`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import css from './ErrorBackEnd.module.css';\n\nconst ErrorBackEnd = ({ errorBackEnd }) => {\n  return (\n    <h1 className={css.titleError}>\n      Ups! <span className={css.titleErrorRed}>Error:</span> {errorBackEnd}\n    </h1>\n  );\n};\n\nexport default ErrorBackEnd;\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"MovieDetailsPage_details__pkcOH\",\"detailsBtn\":\"MovieDetailsPage_detailsBtn__-rEm+\",\"detailsBox\":\"MovieDetailsPage_detailsBox__ZvaYL\",\"detailsBoxInfo\":\"MovieDetailsPage_detailsBoxInfo__QE1h1\",\"detailsBoxTitle\":\"MovieDetailsPage_detailsBoxTitle__eZbfd\",\"detailsBoxParagraph\":\"MovieDetailsPage_detailsBoxParagraph__Xsrxj\",\"detailsBoxSubTitle\":\"MovieDetailsPage_detailsBoxSubTitle__1VSge\",\"detailsSubTitle\":\"MovieDetailsPage_detailsSubTitle__KlK+K\",\"detailsNavLink\":\"MovieDetailsPage_detailsNavLink__12D2H\",\"detailsLink\":\"MovieDetailsPage_detailsLink__nRoii\"};","import { useEffect, useRef, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovies } from 'api/movies.js';\nimport ErrorBackEnd from 'components/ErrorBackEnd/ErrorBackEnd';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [errorBackEnd, setErrorBackEnd] = useState('');\n  const [isLoader, setIsLoader] = useState(false);\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n  console.log(location);\n  console.log(backLinkLocation);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    } else {\n      const handleMovies = async () => {\n        try {\n          setIsLoader(true);\n          const data = await getMovies(`movie/${movieId}`);\n          setMovieDetails(data);\n          setIsLoader(false);\n        } catch (error) {\n          setErrorBackEnd(error.message);\n        } finally {\n          setIsLoader(false);\n        }\n      };\n      handleMovies();\n    }\n  }, [movieId]);\n  const releaseYear = movieDetails.release_date\n    ? movieDetails.release_date.split('-')[0]\n    : '';\n  const genres = movieDetails.genres\n    ? movieDetails.genres.map(genre => genre.name)\n    : [];\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <>\n      {errorBackEnd && <ErrorBackEnd errorBackEnd={errorBackEnd} />}\n      {isLoader && <Loader />}\n      {!errorBackEnd && !isLoader && (\n        <div className={css.details}>\n          <div className={css.detailsBtn}>\n            <NavLink to={backLinkLocation.current}>go to back</NavLink>\n          </div>\n          <div className={css.detailsBox}>\n            <img\n              className={css.detailsBoxImg}\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              width={200}\n              alt={movieDetails.title}\n            />\n            <div className={css.detailsBoxInfo}>\n              <h1 className={css.detailsBoxTitle}>\n                {movieDetails.title}\n                {`(${releaseYear})`}\n              </h1>\n              <p className={css.detailsBoxParagraph}>\n                User Score: {Math.round(movieDetails.vote_average * 10)}%\n              </p>\n              <h2 className={css.detailsBoxSubTitle}>Overview</h2>\n              <p className={css.detailsBoxParagraph}>{movieDetails.overview}</p>\n              <h3 className={css.detailsBoxSubTitle}>Genres</h3>\n              <p className={css.detailsBoxParagraph}>{genres.join(' ')}</p>\n            </div>\n          </div>\n          <h4 className={css.detailsSubTitle}>Additional information</h4>\n          <div className={css.detailsNavLink}>\n            <NavLink className={css.detailsLink} to={`cast`}>\n              Cast\n            </NavLink>\n            <NavLink className={css.detailsLink} to={`reviews`}>\n              Reviews\n            </NavLink>\n          </div>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["axios","API","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","props","_yield$axios","data","_context","prev","next","concat","sent","abrupt","stop","_x","apply","arguments","getSearchMovies","_ref2","_callee2","query","_yield$axios2","_context2","_x2","errorBackEnd","_jsxs","className","css","children","_jsx","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","_useState3","_useState4","setErrorBackEnd","_useState5","_useState6","isLoader","setIsLoader","backLinkLocation","useRef","state","from","console","log","useEffect","handleMovies","t0","message","finish","releaseYear","release_date","split","genres","map","genre","name","_Fragment","ErrorBackEnd","Loader","NavLink","to","current","src","poster_path","width","alt","title","Math","round","vote_average","overview","join","Outlet"],"sourceRoot":""}